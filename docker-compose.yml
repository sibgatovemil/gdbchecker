version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: gdbchecker_db
    restart: always
    environment:
      POSTGRES_DB: gdbchecker
      POSTGRES_USER: gdbchecker
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gdbchecker_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gdbchecker"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: gdbchecker_web
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://gdbchecker:${DB_PASSWORD}@db:5432/gdbchecker
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - FLASK_ENV=production
      - CHECK_INTERVAL_HOURS=8
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gdbchecker_network
    command: >
      sh -c "python init_db.py &&
             gunicorn -w 4 -b 0.0.0.0:8080 --access-logfile logs/access.log --error-logfile logs/error.log app:app &
             python scheduler.py"

volumes:
  postgres_data:

networks:
  gdbchecker_network:
    driver: bridge
